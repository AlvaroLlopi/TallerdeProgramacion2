<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>